[{"categories":["科研"],"content":"本文主要描述开题报告的格式和应注意的点。","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"开题报告写的内容，其实跟Introduction和Literature review的内容十分相似，写好了其实可以直接应用到论文的前两章里。 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:0:0","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"引言 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:1:0","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"研究背景 段落1：说明研究问题的重要性，实践上，理论上为什么要研究（可以简单地举下例子）？针对论文题目拆开关键词（主语、定语等）分别进行阐释。 段落2：简要介绍目前已有哪些研究，都是基于哪些理论。 ​ 转折但是现有研究并没有考虑哪些因素/没有从xx视角出发/主要集中在xx领域，目的是为了引出自己论文的优点 段落3：所以本文从xx视角基于xx理论采用xx方法 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:1:1","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"研究意义 理论意义：完善了/提出了，研究方法/研究内容/数学模型创新 实践意义：结合实际应用说明 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:1:2","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"文献综述 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:2:0","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"国内外研究现状 主要选择近5年的研究进行重点阐述，根据其采用的研究方法从大体上进行归类后再一一引出 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:2:1","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"文献述评 总结归纳到底哪些方面有不足，比研究背景处提到的不足要更加具体，针对别人的不足就是自己论文的研究重点 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:2:2","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"主要研究内容及研究中的创新点和关键点 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:3:0","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"研究内容 研究内容与文献述评中的研究重点是相关联的，拓展描述 一般为名词+动词的结构，如xx的构建，xx的分析，xx的设计 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:3:1","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"创新点 他无我有，他有我优 比如研究视角/研究内容创新，一定是与别人的工作比较得出 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:3:2","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"关键点和难点 把创新点关键在何处，难在何处进行具体阐述 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:3:3","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"研究方案 针对每个研究内容如何做，采用的方法和思路 可以用画图的方式表明流程，再列举一些公式 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:4:0","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"技术路线图 逻辑清晰、简单明了，整体格局的生动形象化，色彩化，图片化。 以实验技术方法为主导 以实验内容为主导 以实验时间为主导 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:4:1","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"可行性分析 理论与方法的可行性，资料与数据获取的可行性，研究基础等 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:4:2","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["科研"],"content":"参考链接 https://www.zhihu.com/question/308738345/answer/871809766 https://www.bilibili.com/video/BV1kZ4y1G7c3 ","date":"2021-03-15","objectID":"/posts/thesis-proposal.html/:5:0","tags":["开题报告"],"title":"开题报告撰写指南","uri":"/posts/thesis-proposal.html/"},{"categories":["Hugo"],"content":"本文主要描述购买域名后SSL证书和Netlify绑定域名和启用Https的设置。","date":"2020-12-08","objectID":"/posts/domain-netlify.html/","tags":["Netlify","SSL","Https"],"title":"域名设置指南","uri":"/posts/domain-netlify.html/"},{"categories":["Hugo"],"content":"SSL证书 购买域名之后的DNS配置可以参考此处。 以namecheap为例，购买SSL证书后在账户下拉选单中进入Dashboard界面，选择Product List里的SSL Certificates，点击ACTIVE激活。 进入如下界面： 这时需要生成CSR文件并填入，如果有输入端的如服务器之类的可以用代码生成，如果没有输入端的则可以浏览器搜索CSR生成网站手动生成，一般会得到一个CSR文件和一个密钥文件，切记保存下来。 将CSR文件的内容输入，Primary domain会自动识别填上，接下来就到域名所有权验证。 在EDIT METHODS处可看到三种方式，推荐用DNS验证的方式。 在DNS验证方式下，分别复制Host(如xxx.example.com形式，只复制xxx的部分)和Target(全部)，去到Dashboard界面Domain List \u003e MANAGE \u003e Advanced DNS，创建一个CNAME记录，对应地填在Host和Value栏。 等待约10分钟，一般就会提示解析完成，在SSL证书界面会看到状态变更为ACTIVE，可以下载证书文件。解压后会得到.crt，.p7b，.ca-bundle三个文件。 ","date":"2020-12-08","objectID":"/posts/domain-netlify.html/:1:0","tags":["Netlify","SSL","Https"],"title":"域名设置指南","uri":"/posts/domain-netlify.html/"},{"categories":["Hugo"],"content":"Netlify绑定域名和启用Https 进入项目的Settings，再进入Domain management界面可以进行域名绑定和启用Https设置。 ","date":"2020-12-08","objectID":"/posts/domain-netlify.html/:2:0","tags":["Netlify","SSL","Https"],"title":"域名设置指南","uri":"/posts/domain-netlify.html/"},{"categories":["Hugo"],"content":"域名绑定 点击Add domain alias可以添加自己购买的域名。此时会提醒检查DNS解析配置，点击提示，回到域名服务商处添加DNS解析记录即可。 ","date":"2020-12-08","objectID":"/posts/domain-netlify.html/:2:1","tags":["Netlify","SSL","Https"],"title":"域名设置指南","uri":"/posts/domain-netlify.html/"},{"categories":["Hugo"],"content":"启用Https设置 选择自主验证方式，弹出界面如下： 第一项Certificate填入上一章节下载的.crt文件 第二项Private key填入之前生成CSR得到的密钥文件 第三项Intermediate certs填入上一章节下载的.ca-bundle文件 然后Install certificate安装证书，很快就会通过，再点击强制Https即可。成功的效果图如下： ","date":"2020-12-08","objectID":"/posts/domain-netlify.html/:2:2","tags":["Netlify","SSL","Https"],"title":"域名设置指南","uri":"/posts/domain-netlify.html/"},{"categories":["Hugo"],"content":"Valine评论系统使用指南","date":"2020-12-04","objectID":"/posts/valine-guide.html/","tags":["Valine"],"title":"Valine简易说明","uri":"/posts/valine-guide.html/"},{"categories":["Hugo"],"content":"如何评论 使用 Valine 进行评论十分方便，您只需要填入以下内容： 昵称 邮箱 网址 可任意填写 填写个人有效邮箱地址 填写个人有效网址 甚至，您可以不填写以上任何一项个人信息，进行匿名评论。但强烈建议填入个人有效邮箱，这样当您的评论被回复时，您将及时收到一封提醒邮件。 由于 Valine 的特性，您将无法自行删除自己的评论，如果有需要，可以给我发送邮件进行删除。您也无需担心隐私被泄露，网页的评论区不会显示您的邮箱，并且您完全可以选择匿名评论。 Valine 支持 Markdown，Markdown 是一种非常流行且方便的轻量级标记语言，您可以使用它的语法撰写评论。您也可以无视 Markdown 的特性，直接撰写评论即可。 Valine 使用的是 Gravatar 作为评论列表头像，您会被分配一个默认头像。如果想更改头像，登录或注册 Gravatar，然后修改自己的头像。评论的时候，留下在 Gravatar 注册时所使用的邮箱即可。 如果您修改了头像后发现没有更新，请不要慌张，因为gravatar.cat.net 有七天的缓存期，安静的等待吧 ","date":"2020-12-04","objectID":"/posts/valine-guide.html/:0:1","tags":["Valine"],"title":"Valine简易说明","uri":"/posts/valine-guide.html/"},{"categories":["Hugo"],"content":"邮件提醒 当有人回复您的评论时，如果您填入了有效的邮件地址，则您也会收到来自kevinfan.blog@qq.com发送的类似如下的提醒邮件： 理论上直接回复提醒邮件，我也能收到，但依然建议您点击邮件中的链接，回到博客评论区进行回复操作。 如果您发现您的评论被回复，但没有收到邮件提醒，请检查是否填写了正确的个人邮箱地址，以及检查一下邮箱的垃圾箱。如果依然没有收到回复提醒邮件，可以给我发送邮件进行反馈。 ","date":"2020-12-04","objectID":"/posts/valine-guide.html/:0:2","tags":["Valine"],"title":"Valine简易说明","uri":"/posts/valine-guide.html/"},{"categories":["Hugo"],"content":"参考链接 https://enit.xyz/tech/valine-guide/ https://valine.js.org/ ","date":"2020-12-04","objectID":"/posts/valine-guide.html/:0:3","tags":["Valine"],"title":"Valine简易说明","uri":"/posts/valine-guide.html/"},{"categories":["Hugo"],"content":"Emoji符号清单","date":"2020-12-03","objectID":"/posts/emoji-list.html/","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"表情与情感 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"笑脸表情 图标 代码 图标 代码 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"爱意表情 图标 代码 图标 代码 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"吐舌头表情 图标 代码 图标 代码 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"带手的表情 图标 代码 图标 代码 🤗 hugs 🤔 thinking ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"中性表情 图标 代码 图标 代码 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"困倦的表情 图标 代码 图标 代码 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"不适的表情 图标 代码 图标 代码 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"戴帽子的表情 图标 代码 图标 代码 🤠 cowboy_hat_face ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"戴眼镜的表情 图标 代码 图标 代码 😎 sunglasses 🤓 nerd_face ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:9","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"担心的表情 图标 代码 图标 代码 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:10","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"否定的表情 图标 代码 图标 代码 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:11","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"特殊打扮的表情 图标 代码 图标 代码 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:12","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"猫脸表情 图标 代码 图标 代码 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:13","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"猴脸表情 图标 代码 图标 代码 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:14","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"情感 图标 代码 图标 代码 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:1:15","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"人与身体 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"张开手掌的手势 图标 代码 图标 代码 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"部分手指的手势 图标 代码 图标 代码 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"一根手指的手势 图标 代码 图标 代码 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"握紧的手势 图标 代码 图标 代码 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"两只手 图标 代码 图标 代码 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"握住东西的手势 图标 代码 图标 代码 ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"身体部位 图标 代码 图标 代码 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"人 图标 代码 图标 代码 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"身体动作 图标 代码 图标 代码 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:9","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"人物角色 图标 代码 图标 代码 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵 man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:10","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"幻想的人物 图标 代码 图标 代码 👼 angel 🎅 santa 🤶 mrs_claus ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:11","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"人物活动 图标 代码 图标 代码 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:12","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"体育 图标 代码 图标 代码 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:13","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"休息 图标 代码 图标 代码 🛀 bath 🛌 sleeping_bed ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:14","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"家庭 图标 代码 图标 代码 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 👩‍❤️‍👨 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:15","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"人物符号 图标 代码 图标 代码 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:2:16","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"动物与自然 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"哺乳动物 图标 代码 图标 代码 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"鸟类 图标 代码 图标 代码 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"两栖动物 icon code icon code 🐸 frog ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"爬虫类 图标 代码 图标 代码 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"海洋动物 图标 代码 图标 代码 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"虫类 图标 代码 图标 代码 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🐞 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"花类植物 图标 代码 图标 代码 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"其它植物 图标 代码 图标 代码 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:3:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"食物与饮料 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"水果 图标 代码 图标 代码 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"蔬菜 图标 代码 图标 代码 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"快餐 图标 代码 图标 代码 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"亚洲食物 图标 代码 图标 代码 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"海鲜 图标 代码 图标 代码 🦀 crab 🦐 shrimp 🦑 squid ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"甜点 图标 代码 图标 代码 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"饮料 图标 代码 图标 代码 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"餐具 图标 代码 图标 代码 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:4:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"旅游与地理 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"地图 图标 代码 图标 代码 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"地理现象 图标 代码 图标 代码 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"建筑物 图标 代码 图标 代码 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"宗教建筑 图标 代码 图标 代码 ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"其它地点 图标 代码 图标 代码 ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"陆路运输 图标 代码 图标 代码 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"水路运输 图标 代码 图标 代码 ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"空中运输 图标 代码 图标 代码 ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"旅馆 icon code icon code 🛎️ bellhop_bell ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:9","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"时间 图标 代码 图标 代码 ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:10","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"天空与天气 图标 代码 图标 代码 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:5:11","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"活动 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:6:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"事件 图标 代码 图标 代码 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:6:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"奖杯与奖牌 图标 代码 图标 代码 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:6:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"体育运动 图标 代码 图标 代码 ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:6:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"游戏 图标 代码 图标 代码 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:6:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"艺术与工艺 图标 代码 图标 代码 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:6:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"物品 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"服装 图标 代码 图标 代码 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"声音 图标 代码 图标 代码 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"音乐 图标 代码 图标 代码 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"乐器 图标 代码 图标 代码 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"电话 图标 代码 图标 代码 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"电脑 图标 代码 图标 代码 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"灯光与影像 图标 代码 图标 代码 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"书与纸张 图标 代码 图标 代码 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"钱 图标 代码 图标 代码 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:9","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"邮件 图标 代码 图标 代码 ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:10","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"书写 图标 代码 图标 代码 ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:11","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"办公 图标 代码 图标 代码 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:12","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"锁 图标 代码 图标 代码 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:13","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"工具 图标 代码 图标 代码 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:14","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"科学 图标 代码 图标 代码 ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:15","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"医疗 图标 代码 图标 代码 💉 syringe 💊 pill ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:16","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"生活用品 图标 代码 图标 代码 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:17","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"其它物品 图标 代码 图标 代码 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:7:18","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"符号 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"交通标识 图标 代码 图标 代码 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"警告 图标 代码 图标 代码 ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"箭头 图标 代码 图标 代码 ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:3","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"宗教 图标 代码 图标 代码 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:4","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"生肖 图标 代码 图标 代码 ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:5","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"影像符号 图标 代码 图标 代码 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:6","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"数学 图标 代码 图标 代码 ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:7","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"标点符号 图标 代码 图标 代码 ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:8","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"货币 图标 代码 图标 代码 💱 currency_exchange 💲 heavy_dollar_sign ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:9","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"按键符号 图标 代码 图标 代码 #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:10","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"字母符号 图标 代码 图标 代码 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:11","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"几何符号 图标 代码 图标 代码 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:12","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"其它符合 图标 代码 图标 代码 ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:8:13","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"旗帜 ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:9:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"常用旗帜 图标 代码 图标 代码 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:9:1","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"国家和地区旗帜 图标 代码 图标 代码 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:9:2","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"参考链接 emoji-support ","date":"2020-12-03","objectID":"/posts/emoji-list.html/:10:0","tags":["emoji"],"title":"Emoji符号清单","uri":"/posts/emoji-list.html/"},{"categories":["Hugo"],"content":"记录一下主题shortcode的语法，遗忘时可以参考。","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"内置Shortcodes ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:1:0","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"figure figure 的文档 figure shortcode 有以下命名参数： src [必需] (第一个位置参数) 图片的 URL。 alt [可选] 图片无法显示时的替代文本， 默认值是 src 参数的值。 支持 Markdown 或者 HTML 格式。 caption [可选] 图片说明。 支持 Markdown 或者 HTML 格式。 title [可选] 图片标题。 class [可选] HTML figure 标签的 class 属性。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 {{\u003c figure src=\"/images/pexels.jpg\" title=\"lake\" \u003e}} 输出效果为： lake 注意 更详细的插入图片用法请见此处。 ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:1:1","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"gist 可以引用GitHub里的代码。 gist 的文档 假设网址中存在gist： https://gist.github.com/spf13/7896402 可以通过URL获得的用户名和gist ID嵌入到内容中： {{\u003c gist spf13 7896402 \u003e}} 输出效果为： ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:1:2","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"highlight highlight 的文档，效果跟围栏代码块很像。 {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} 输出效果为： \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:1:3","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"ref和relref 用于交叉引用文档。 ref 和 relref 的文档 {{\u003c ref \"document.md\" \u003e}} {{\u003c ref \"document.md#anchor\" \u003e}} {{\u003c ref \"/blog/my-post.md\" \u003e}} {{\u003c relref \"document.md\" \u003e}} {{\u003c relref \"/blog/my-post.md\" \u003e}} [markdown语法]({{\u003c ref \"markdownGrammer.md#link-test\" \u003e}} \"测试\") 以第六行为例效果为： markdown语法 这将会跳转到名为markdown语法的文章link-test锚点处，即链接标题。 ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:1:4","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"主题Shortcodes ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:0","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"style 支持  SASS 中的嵌套语法。 {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} 输出效果为： This is a right-aligned paragraph. ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:1","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"link link shortcode 有以下命名参数： href [必需] (第一个位置参数) 链接的目标。 content [可选] (第二个位置参数) 链接的内容，默认值是 href 参数的值。 支持 Markdown 或者 HTML 格式。 title [可选] (第三个位置参数) HTML a 标签 的 title 属性，当悬停在链接上会显示的提示。 rel [可选] HTML a 标签 的 rel 补充属性。 class [可选] HTML a 标签 的 class 属性。 {{\u003c link \"https://fmx789.github.io\" 我的博客 \u003e}} 或者 {{\u003c link href=\"https://fmx789.github.io\" content=我的博客 title=\"KevinFan的博客\" \u003e}} 输出效果为： 我的博客 ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:2","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"admonition admonition有三个参数： type [必需] 默认值是note title [可选] 默认值是 type 参数的值 open [可选] 横幅内容是否默认展开, 默认值是 true {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 注意 {{\u003c admonition \u003e}} 一个 **注意** 横幅 {{\u003c /admonition \u003e}} 注意 一个 注意 横幅 摘要 {{\u003c admonition abstract \u003e}} 一个 **摘要** 横幅 {{\u003c /admonition \u003e}} 摘要 一个 摘要 横幅 信息 {{\u003c admonition info \u003e}} 一个 **信息** 横幅 {{\u003c /admonition \u003e}} 信息 一个 信息 横幅 技巧 {{\u003c admonition tip \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 技巧 一个 技巧 横幅 成功 {{\u003c admonition success \u003e}} 一个 **成功** 横幅 {{\u003c /admonition \u003e}} 成功 一个 成功 横幅 问题 {{\u003c admonition question \u003e}} 一个 **问题** 横幅 {{\u003c /admonition \u003e}} 问题 一个 问题 横幅 警告 {{\u003c admonition warning \u003e}} 一个 **警告** 横幅 {{\u003c /admonition \u003e}} 警告 一个 警告 横幅 失败 {{\u003c admonition failure \u003e}} 一个 **失败** 横幅 {{\u003c /admonition \u003e}} 失败 一个 失败 横幅 危险 {{\u003c admonition danger \u003e}} 一个 **危险** 横幅 {{\u003c /admonition \u003e}} 危险 一个 危险 横幅 Bug {{\u003c admonition bug \u003e}} 一个 **Bug** 横幅 {{\u003c /admonition \u003e}} Bug 一个 Bug 横幅 示例 {{\u003c admonition example \u003e}} 一个 **示例** 横幅 {{\u003c /admonition \u003e}} 示例 一个 示例 横幅 引用 {{\u003c admonition quote \u003e}} 一个 **引用** 横幅 {{\u003c /admonition \u003e}} 引用 一个 引用 横幅 ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:3","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"image image shortcode 有以下命名参数： src [必需] (第一个位置参数) 图片的 URL。 alt [可选] (第二个位置参数) 图片无法显示时的替代文本， 默认值是 src 参数的值。 支持 Markdown 或者 HTML 格式。 caption [可选] (第三个位置参数) 图片标题。 支持 Markdown 或者 HTML 格式。 title [可选] 当悬停在图片上会显示的提示。 class [可选] HTML figure 标签的 class 属性。 src_s [可选] 图片缩略图的 URL，用在画廊模式中， 默认值是 src 参数的值。 src_l [可选] 高清图片的 URL，用在画廊模式中, 默认值是 src 参数的值。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 linked [可选] 图片是否需要被链接，默认值是 true。 rel [可选] HTML a 标签 的 rel 补充属性，仅在 linked 属性设置成 true 时有效。 {{\u003c image src=\"/images/pexels.jpg\" caption=\"Lighthouse (`image`)\" src_s=\"/images/pexels-small.jpg\" src_l=\"/images/pexels-large.jpg\" \u003e}} ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:4","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"mermaid mermaid 是一个可以帮助你在文章中生成图表和流程图的库，类似 Markdown 的语法。 流程图 {{\u003c mermaid \u003e}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} 时序图 {{\u003c mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} 甘特图 {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u003c /mermaid \u003e}} 状态图 {{\u003c mermaid \u003e}} stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} Git图 {{\u003c mermaid \u003e}} gitGraph: options { \"nodeSpacing\": 100, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u003c /mermaid \u003e}} 饼图 {{\u003c mermaid \u003e}} pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:5","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"echarts ECharts 提供了常规的 折线图，柱状图，散点图，饼图，K线图，用于统计的 盒形图，用于地理数据可视化的 地图，热力图，线图，用于关系数据可视化的 关系图， treemap，旭日图，多维数据可视化的 平行坐标，还有用于 BI 的 漏斗图，仪表盘，并且支持图与图之间的混搭。 echarts shortcode 还有以下命名参数: width [可选] (第一个位置参数) 数据可视化的宽度，默认值是 100%。 height [可选] (第二个位置参数) 数据可视化的高度，默认值是 30rem。 一个 JSON 格式的 echarts 示例： {{\u003c echarts \u003e}} { \"title\": { \"text\": \"折线统计图\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"保存为图片\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"邮件营销\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"联盟广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"视频广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"直接访问\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"搜索引擎\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} 一个 YAML 格式的 echarts 示例： {{\u003c echarts \u003e}}title:text:折线统计图top:2%left:centertooltip:trigger:axislegend:data:- 邮件营销- 联盟广告- 视频广告- 直接访问- 搜索引擎top:10%grid:left:5%right:5%bottom:5%top:20%containLabel:truetoolbox:feature:saveAsImage:title:保存为图片xAxis:type:categoryboundaryGap:falsedata:- 周一- 周二- 周三- 周四- 周五- 周六- 周日yAxis:type:valueseries:- name:邮件营销type:linestack:总量data:- 120- 132- 101- 134- 90- 230- 210- name:联盟广告type:linestack:总量data:- 220- 182- 191- 234- 290- 330- 310- name:视频广告type:linestack:总量data:- 150- 232- 201- 154- 190- 330- 410- name:直接访问type:linestack:总量data:- 320- 332- 301- 334- 390- 330- 320- name:搜索引擎type:linestack:总量data:- 820- 932- 901- 934- 1290- 1330- 1320{{\u003c /echarts \u003e}} 一个 TOML 格式的 echarts 示例： {{\u003c echarts \u003e}} [title] text = \"折线统计图\" top = \"2%\" left = \"center\" [tooltip] trigger = \"axis\" [legend] data = [ \"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\" ] top = \"10%\" [grid] left = \"5%\" right = \"5%\" bottom = \"5%\" top = \"20%\" containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \"保存为图片\" [xAxis] type = \"category\" boundaryGap = false data = [ \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\" ] [yAxis] type = \"value\" [[series]] name = \"邮件营销\" type = \"line\" stack = \"总量\" data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \"联盟广告\" type = \"line\" stack = \"总量\" data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \"视频广告\" type = \"line\" stack = \"总量\" data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \"直接访问\" type = \"line\" stack = \"总量\" data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name = \"搜索引擎\" type = \"line\" stack = \"总量\" data = [ 820.0, 932.0, 901.0, 934.0, 1290.0, 1330.0, 1320.0 ] {{\u003c /echarts \u003e}} ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:6","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"mapbox mapbox shortcode 有以下命名参数来使用 Mapbox GL JS： lng [必需] (第一个位置参数) 地图初始中心点的经度，以度为单位。 lat [必需] (第二个位置参数) 地图初始中心点的纬度，以度为单位。 zoom [可选] (第三个位置参数) 地图的初始缩放级别，默认值是 10。 marked [可选] (第四个位置参数) 是否在地图的初始中心点添加图钉，默认值是 true。 light-style [可选] (第五个位置参数) 浅色主题的地图样式。 dark-style [可选] (第六个位置参数) 深色主题的地图样式。 navigation [可选] 是否添加 NavigationControl。 geolocate [可选] 是否添加 GeolocateControl。 scale [可选] 是否添加 ScaleControl。 fullscreen [可选] 是否添加 FullscreenControl。 width [可选] 地图的宽度，默认值是 100%。 height [可选] 地图的高度，默认值是 20rem。 {{\u003c mapbox -122.252 37.453 10 false \"mapbox://styles/mapbox/streets-zh-v1\" \u003e}} 或者 {{\u003c mapbox lng=-122.252 lat=37.453 zoom=10 marked=false light-style=\"mapbox://styles/mapbox/streets-zh-v1\" \u003e}} ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:7","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"music 自定义音乐URL music shortcode 有以下命名参数来使用自定义音乐 URL： server [必需] 音乐的链接。 type [可选] 音乐的名称。 artist [可选] 音乐的创作者。 cover [可选] 音乐的封面链接。 {{\u003c music url=\"/music/Wavelength.mp3\" name=Wavelength artist=oldmanyoung cover=\"/images/Wavelength.jpg\" \u003e}} 音乐平台URL auto [必需]] (第一个位置参数) 用来自动识别的音乐平台 URL, 支持 netease, tencent 和 xiami 平台。歌单播放形式。 {{\u003c music auto=\"https://music.163.com/#/playlist?id=2829816518\" \u003e}} 或者 {{\u003c music \"https://music.163.com/#/playlist?id=2829816518\" \u003e}} 自定义音乐平台，类型和ID server [必需] (第一个位置参数) [netease, tencent, kugou, xiami, baidu] 音乐平台。 type [必需] (第二个位置参数) [song, playlist, album, search, artist] 音乐类型。 id [必需] (第三个位置参数) 歌曲 ID，或者播放列表 ID，或者专辑 ID，或者搜索关键词，或者创作者 ID。 {{\u003c music server=\"netease\" type=\"song\" id=\"1446764662\" \u003e}} 或者 {{\u003c music netease song 1446764662 \u003e}} 可选参数 theme [可选] 音乐播放器的主题色，默认值是 #448aff。 fixed [可选] 是否开启固定模式，默认值是 false。 mini [可选] 是否开启迷你模式，默认值是 false。 autoplay [可选] 是否自动播放音乐，默认值是 false。 volume [可选] 第一次打开播放器时的默认音量，会被保存在浏览器缓存中，默认值是 0.7。 mutex [可选] 是否自动暂停其它播放器，默认值是 true。 此外，针对歌单形式的音乐，还有以下可选参数： loop [可选] [all, one, none] 音乐列表的循环模式，默认值是 none。 order [可选] [list, random] 音乐列表的播放顺序，默认值是 list。 list-folded [可选] 初次打开的时候音乐列表是否折叠，默认值是 false。 list-max-height [可选] 音乐列表的最大高度，默认值是 340px。 ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:8","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"bilibili 只有1P的视频 {{\u003c bilibili BV1f4411M7QC \u003e}} 或者 {{\u003c bilibili id=BV1f4411M7QC \u003e}} 有多P的视频，则需要制定集数P {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:9","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"typeit 提供打字动画。 普通内容 {{\u003c typeit \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} 代码内容 通过使用参数 code 指定语言类型实现语法高亮。 {{\u003c typeit code=java \u003e}} public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } {{\u003c /typeit \u003e}} 分组内容 {{\u003c typeit group=paragraph \u003e}} **首先**, 这个段落开始 {{\u003c /typeit \u003e}} {{\u003c typeit group=paragraph \u003e}} **然后**, 这个段落开始 {{\u003c /typeit \u003e}} ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:2:10","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Hugo"],"content":"参考链接 内置shortcode 拓展shortcode ","date":"2020-12-02","objectID":"/posts/shortcode-grammer.html/:3:0","tags":["shortcode","可视化","音乐","视频"],"title":"Shortcode","uri":"/posts/shortcode-grammer.html/"},{"categories":["Markdown"],"content":"记录一下Markdown的语法，遗忘时可以参考。","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"基本语法 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:0","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"标题 从h1到h6的标题在每个级别依次加一个#： # h1 标题 ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 对应Typora里的快捷键是ctrl+1~6。 标题 ID 要添加自定义标题 ID，请在与标题相同的行中将自定义 ID 放在花括号中： ### 一个很棒的标题 {#custom-id} ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:1","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"注释 \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释： ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:2","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"水平线 ___：三个连续的下划线 ---：三个连续的破折号 ***：三个连续的星号 输出效果为： ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:3","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"内联HTML元素 \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:4","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"字体强调 *斜体*或_斜体_ **粗体**或__粗体__ ~~删除线~~ ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 输出效果为： 斜体 斜体 粗体 粗体 删除线 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:5","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"引用 在要引用的任何文本之前添加 \u003e： \u003e 这是引用的文本 这是引用的文本 引用可以嵌套： \u003e 第一层 \u003e\u003e 第二层 第一层 第二层 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:6","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"列表 无序列表 可以使用以下任何符号来表示无序列表中的项： * 一项内容 * 一项内容 - 一项内容 + 一项内容 输出效果为: 一项内容 一项内容 一项内容 一项内容 对应Typora里的快捷键是ctrl+shift+]。 有序列表 1. 第一项 2. 第二项 3. 第三项 输出效果为: 第一项 第二项 第三项 对应Typora里的快捷键是ctrl+shift+[。 任务列表 任务列表使你可以创建带有复选框的列表。 要创建任务列表，请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ])。要选择一个复选框，请在方括号之间添加 x ([x])。 - [x] Write the press release - [ ] Update the website - [ ] Contact the media 输出效果为: Write the press release Update the website Contact the media ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:7","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"代码 Typora启用代码块的快捷键是ctrl+shift+k。 行内代码 用 ` 包装行内代码段。 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**。 输出效果为: 在这个例子中，\u003csection\u003e\u003c/section\u003e 会被包裹成 代码。 围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块。类似的有shortcode里的highlight。 Sample text here... ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:8","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"语法高亮 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名，比如```js，语法高亮显示将自动应用于渲染的 HTML 中。 grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息，包括语法高亮的 shortcode。 linenos：配置行号。有效值是true，false，table，或inline。false如果将其配置为在站点配置中启用，则将关闭行号。 table 将提供友好的复制粘贴代码块。 hl_lines：列出要突出显示的一组行号或行号范围。 linenostart=199：从199开始行号计数。 anchorlinenos：在行号上配置锚点。有效值为true或false; lineanchors：为行号上的锚点配置前缀。将带有后缀-，因此使用选项链接到行号1lineanchors=prefix会将锚点添加prefix-1到页面。 ​```js {linenos=table,hl_lines=[8,\"14-15\"],linenostart=1} grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ​``` 输出效果为： grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:9","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"表格 Typora快捷键为ctrl+T。 选项 描述 data 数据 txt 文本 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:10","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"链接 基本链接 \u003chttps://fmx789.github.io\u003e https://fmx789.github.io 添加标题的链接 [我的博客](https://fmx789.github.io) 我的博客 对应Typora里的快捷键是ctrl+k。 文内链接 [跳转到链接](#link-test) 同时在跳转到的地方加个标签，注意标签不要跟带#的标题放在同一行，如果是非标题则无所谓： \u003ca id=\"link-test\"\u003e\u003c/a\u003e ### 链接 跳转到“链接”标题 注意 如果要链接不同的文章，请查看此处。 如果要鼠标悬停时显示提示信息，请查看此处。 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:11","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"脚注 脚注使你可以添加注释和参考，而不会使文档正文混乱。 创建脚注时，在添加脚注引用的位置会出现带有链接的上标编号。 单击链接便会跳至页面底部的脚注内容。 脚注编号： 这是一个数字脚注[^1]. 这是一个英文脚注[^label] 脚注内容： [^1]: 这是一个数字脚注 [^one]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个英文脚注2 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:12","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"图片 ![Alt text][id] 更丰富的图片功能详见本文此处。 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:1:13","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"主题拓展语法 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:2:0","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"ruby注释 [内容]^(这是注释) 内容这是注释 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:2:1","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"分数 [1]/[3] 1/3 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:2:2","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"Font Awesome图标库 芜湖起飞! :(fas fa-rocket fa-fw): 真开心! :(far fa-grin-tears): 芜湖起飞! 真开心! ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:2:3","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"转义字符 特殊情况下，文章内容与Markdown基本/拓展语法冲突时，可以使用转义字符来帮助渲染出想要的内容。 {?:}joy: 这将展示:joy:而不是😂。 ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:2:4","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Markdown"],"content":"参考链接 markdown基本语法 主题拓展语法 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2020-11-30","objectID":"/posts/markdown-grammer.html/:3:0","tags":["Markdown","ruby","font-awesome"],"title":"Markdown语法","uri":"/posts/markdown-grammer.html/"},{"categories":["Hugo"],"content":"这篇文章主要介绍基于Hugo的博客搭建过程。","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"下载安装包 从 https://github.com/gohugoio/hugo/releases 下载extended版本的Windows-64bit.zip到某个目录，如D:\\Hugo，解压后，将该目录添加到Windows的PATH环境变量。 打开cmd，输入hugo version验证安装是否成功，有显示版本即可。 同时，最好安装上Go和git。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:1:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"建立新网站 进入一个磁盘用于存放博客文件，如D:\\。然后在该文件夹右键Git Bash Here（当然用cmd也可以），打开命令行键入如下命令。 hugo new site blog “blog”可定义为自己喜欢的名字 该代码将在D盘创建一个名为blog的文件夹并在里面创建一个新的Hugo网站。当前，站点的目录如下： archetypes/ #存放创建md文件时使用的模版，可定制 content/ #存放各种展示给访客的md文件，该目录下课创建多个子目录来进行分类，每个子目录是一个section data/ #存放定义变量的模版文件 layouts/ #存放渲染html的模版文件 static/ #存放静态内容，如图片等 themes/ #存放原始主题文件，没有必要的情况下不要改动里面文件 config.toml #主题配置文件 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:2:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"添加主题 接下来就是激动人心的选主题时刻了，可以去 https://themes.gohugo.io/ 选一款自己比较喜欢的主题作为初始的主题，之后再补充里面的细节。 推荐几款比较不错的主题：LeaveIt，MemE，even，LoveIt，Academic 从GitHub下载主题并将其添加到站点的themes目录中，此处以LoveIt主题为例： cd blog git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 然后将主题添加到站点配置中，在config.toml中添加 theme = \"LoveIt\" 然后，在前往主题配置网站的SiteConfiguration复制其余站点配置到config.toml中。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:3:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"添加内容 新建一篇文章： hugo new \"posts/hello-world.md\" 新建一个关于页面： hugo new \"about/_index.md\" 可以看到在~blog\\content下会产生posts和about两个文件夹，里面各有一个markdown文件，把里面的draft:true删除。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:4:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"启动服务器 hugo server hugo server后可加的常用参数 --bind=\"127.0.0.1\" 服务监听IP地址； -p, --port=1313 服务监听端口； -w, --watch[=true] 监听站点目录，发现文件变更自动编译； -D, --buildDrafts 包括被标记为draft的文章； -E, --buildExpired 包括已过期的文章； -F, --buildFuture 包括将在未来发布的文章； -b, --baseURL=\"www.example.com\" 服务监听域名； --log[=false]: 开启日志； --logFile=\"/var/log/hugo.log\": log输出路径； -t, --theme=\"\" 指定主题； 打开浏览器跳转http://localhost:1313即可看到渲染的界面，在命令行按ctrl+c结束。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:5:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"托管到GitHub Page 创建一个仓库，命名为\u003cYOUR-PROJECT\u003e（例如blog）。这是将包含博客源文件的仓库，这个仓库可以是Private/Public。 创建一个仓库，命名为\u003cUSERNAME\u003e.github.io。这是用于部署博客的仓库，且该仓库必须是Public的。这是通过main分支来启用GitHub Page的方式，只允许一个仓库通过main分支来启用GitHub Pages。配置好后通过直接访问https://\u003cUSERNAME\u003e.github.io/，即可看到个人站点。 此外，如果有其他仓库需要使用GitHub Page，则需要给仓库创建一个名为gh-pages的分支，然后把该分支设为source分支即可。 配置公钥和私钥到仓库。这一步是为了使用Git Action自动构建，自动部署，每次只需上传源文件到\u003cYOUR-PROJECT\u003e仓库即会自动部署到\u003cUSERNAME\u003e.github.io仓库。首先在本地博客根目录打开Git Bash，输入以下命令生产密钥对。 # 修改 username 为你自己的 GitHub 用户名 ssh-keygen -t rsa -b 4096 -C \"username@users.noreply.github.com\" # 注意：这次不要直接回车，以免覆盖之前生成的,改个名字即可 将生成的密钥对分别添加到： 公钥(.pub后缀，如id_rsa.pub) 前往\u003cUSERNAME\u003e.github.io，Settings \u003e Deploy keys \u003e Add deploy key，复制到对应框中。 名字随意，但务必勾选Allow write access。 私钥(无后缀，如id_rsa) 前往\u003cYOUR-PROJECT\u003e仓库，Settings \u003e Secrets \u003e New secret，复制到对应框中。 此时名字必须为DEPLOY_KEY，这是为了与后面的Action脚本里环境变量名字对应。 在本地博客根目录下创建.github/workflows/build.yml，在里面填入： # .github/workflows/build.ymlname:CI#自动化的名称on:push:# push的时候触发branches:# 那些分支需要触发- mainjobs:build:runs-on:ubuntu-latest# 镜像市场steps:- name:checkout# 步骤的名称uses:actions/checkout@v2.3.4#软件市场的名称with:# 参数submodules:true- name:Setup Hugouses:peaceiris/actions-hugo@v2.4.13with:hugo-version:'0.78.1'#填写本地使用的Hugo版本extended:true- name:Buildrun:hugo --minify- name:Deployuses:peaceiris/actions-gh-pages@v2.5.1env:ACTIONS_DEPLOY_KEY:${{ secrets.DEPLOY_KEY }}EXTERNAL_REPOSITORY:username/username.github.ioPUBLISH_BRANCH:mainPUBLISH_DIR:./public 这里需要改四处地方： Line7，填写放置源文件仓库的分支。 Line19，hugo-version填写本地使用的Hugo版本。 Line27，EXTERNAL_REPOSITORY填写部署GitHub Pages的仓库。 Line28，PUBLISH_BRANCH填写部署GitHub Pages仓库的分支。 创建一个.gitignore文件，并在其中添加下面的内容： ### Hugo ### # Generated files by hugo /resources/_gen/ .env public/ # /themes/ # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # OSX .DS_Store 绑定存放源文件的远程仓库 git remote add origin git@github.com:username/\u003cYOUR-PROJECT\u003e.git 使用脚本自动上传。创建一个upload.sh脚本，用chmod +x upload.sh将其设为可执行文件。 首次上传建议将以下脚本手动输入一次，特别是第13行应换成git push -u origin main，跟之后的上传有略微区别。如果不让push，先使用git pull再push即可。 #!/bin/sh # If a command fails then the update stops set -e git add . # Commit changes. msg=\"rebuilding site $(date)\" if [ -n \"$*\" ]; then msg=\"$*\" fi git commit -m \"$msg\" git push 此后使用./upload.sh \"Your optional commit message\"便会提交源文件到\u003cYOUR-PROJECT\u003e上。在该仓库的Actions处可以看到部署进度，大约等一分钟Action运行成功后，从浏览器访问https://\u003cUSERNAME\u003e.github.io便可以查看博客内容了。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:6:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"添加域名 不同域名服务商略有区别，但原理是一样的，从国外域名服务商购买域名配置简单些。 购买域名后，找到配置DNS的界面，添加几条A记录和CNAME记录： Type Host Value A @ 185.199.108.153 A @ 185.199.109.153 A @ 185.199.110.153 A @ 185.199.111.153 CNAME www username.github.io 在本地博客的static目录下创建名为CNAME的文件，里面填入域名，如xxx.com。 接下来去GitHub配置，在\u003cUSERNAME\u003e.github.io仓库点击Settings \u003e Options，下拉找到： 在Custom domain填入注册的域名后，等待一段时间生成证书，然后勾选Enforce HTTPS，进度会在上方显示(Your site is published at xxx那里)。部署成功的图如上所示。 同时，可以发现在该仓库多了一个名为CNAME的文件，里面记录的就是刚刚绑定的域名，之后就可以通过该域名访问博客了。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:7:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"同时部署到多个Pages服务 打开博客根目录隐藏文件夹.git下的config文件，添加url源 [remote \"origin\"] url = git@github.com:\u003cUSERNAME\u003e/\u003cUSERNAME\u003e.github.io.git url = git@e.coding.net:\u003cUSERNAME\u003e/hugo-deploy/hugo-deploy.git #这个是添加的url源 fetch = +refs/heads/*:refs/remotes/origin/* 此后每次执行git push origin main就会推送到多个远程库。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:8:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"在新的环境继续工作 新的电脑上工作就可以把之前同步到GitHub上的博客源文件同步下来继续工作。 在安装好环境(Go+git+Hugo)后，在终端进入想要放置博客的目录，使用git命令拉去远程仓库，将submodule初始化并更新。 git clone \u003cYOUR-PROJECT-URL\u003e \u0026\u0026 cd \u003cYOUR-PROJECT\u003e git submodule init git submodule update 在新的环境中，两个子模块的仓库不在任何分支上，需要进入到对应的目录，然后使用git checkout main将分支切换到main上面。 cd public git checkout main cd ../themes/\u003cYOURTHEME\u003e git checkout main 接下来就可以在新的环境继续工作了。 ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:9:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":["Hugo"],"content":"主题客制化 #免费图标 http://www.fontawesome.com.cn/ #压缩SVG https://jakearchibald.github.io/svgomg/ #制作图标 https://realfavicongenerator.net/ ","date":"2020-11-27","objectID":"/posts/Hugo-blog-build-guide.html/:10:0","tags":["Hugo"],"title":"基于Hugo的博客搭建指南","uri":"/posts/Hugo-blog-build-guide.html/"},{"categories":null,"content":"本站运行时间 \"少年贪玩，青年迷恋爱情，壮年汲汲于成名成家，暮年自安于自欺欺人。人寿几何，顽铁能炼成的精金，能有多少？但不同程度的锻炼，必有不同程度的成绩；不同程度的纵欲放肆，必积下不同程度的顽劣。\" \"如要锻炼一个能做大事的人，必定要叫他吃苦受累，百不称心，才能养成坚忍的性格。一个人经过不同程度的锻炼，就获得不同程度的修养，不同程度的效益。好比香料，捣得愈碎，磨得愈细，香得愈浓烈。\" ——杨绛 您好！欢迎来到Kevin Fan的生活与技术博客。 ","date":"2020-11-11","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"关于我 我是一位本科学生，主修物联网工程，但同时也对许多其他的领域感兴趣，例如视频剪辑、摄影、电子设备、人工智能、电影等等。 常用程序语言是C和Python，目前在努力学习C++和Matlab。 想要成为什么样的人 独立 自由 民主 积极帮助他人 在技术/学术领域有一番建树 ","date":"2020-11-11","objectID":"/about/:0:1","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"关于本站点 费曼技巧中提到，验证你是否真正掌握一个知识，就是要看你能否用直白浅显的语言把复杂深奥的问题和知识讲清楚。 简单来说就是从理解-\u003e简化和类比-\u003e输出的一个往复循环的过程。 所以，我希望有一个平台来分享一些自己的所见所闻所想。这不是报告式的记录，而是讲解式的记录。什么意思呢？例如，当我花了一段时间，理解了什么是SGD，并且实践了。那么我在写文章的时候，便开始假设，如果我面对的是尚未接触这个概念的自己，我要如何讲解，才能够最有效地让我自己学会。 在本站点，在技术方面，我会用它来记下我的学术研究，正在学习的内容的笔记，又或者是踩过的坑。另外，如果我看任何电影或电视连续剧，或阅读任何我认为有趣的书，我可能会对它们进行一些摘抄或者谈谈感受。 本站点由Hugo（一个非常快速的静态站点生成器）驱动，使用的主题是LoveIt，这是一个简洁，多端适配，功能强大的主题，目前通过GitHub Actions进行持续构建、持续部署。 评论系统采用Valine，因此您可以无需注册即可发表评论。尽管如此，但还是强烈建议您在评论时留下邮箱地址，以便在回复您的评论时可以第一时间收到消息。如果您不清楚Valine评论系统的使用方法，可以查看这个简易说明。 博客中的文章均采用 CC BY-NC-SA 许可协议，如果想要转载的话，请注明出处；如需商业性使用，请先邮件联络获得书面许可。假如您在浏览博客的过程中发现了任何问题，欢迎在文章底下留言评论或者邮件告诉我。 博客内容目前同时发布在GitHub和Gitee两个平台，不定期更新。 ","date":"2020-11-11","objectID":"/about/:0:2","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"联系方式 email GitHub ","date":"2020-11-11","objectID":"/about/:0:3","tags":null,"title":"关于","uri":"/about/"},{"categories":["server"],"content":"本文主要描述了部署了Docker的阿里云服务器的搭建步骤，以及python访问数据库的方法。","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"服务器总体配置 弹性ECS，服务器位置买最近的，系统选Ubuntu18.04，数据库使用MySQL8.0，数据库展示界面使用Adminer ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:1:0","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"修改服务器ssh密码 转到控制台云服务器ECS 点击所购买的服务器 在基本信息处选择“更多”-\u003e重置实例密码 重置之后会提醒重启服务器，重启即可 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:2:0","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"什么是Docker Docker 包括三个基本概念: 镜像（Image）：Docker 镜像（Image），就相当于是一个 root 文件系统。 容器（Container）：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。 仓库（Repository）：仓库可看成一个代码控制中心，用来保存镜像。 容器与镜像的关系类似于面向对象编程中的对象与类。 Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:3:0","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"搭建Docker环境 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:4:0","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"使用ssh工具连接服务器 这里以putty为例： host_name：填写服务器公网IP，端口默认22 PS：可以在saved sessions处填一个名字如aliyun，再点击save键保存这次的连接配置，下次再连接 就不需要再输入了。 输入用户名和密码即可进入服务器。 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:4:1","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"安装Docker CE 更新apt库 sudo apt update 允许apt通过HTTPS使用存储库 sudo apt install apt-transport-https ca-certificates curl software-properties-common 添加阿里GPG秘钥 curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - 添加阿里docker源 sudo add-apt-repository \"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs)stable\" 更新apt源 sudo apt-get -y update 安装 sudo apt-get -y install docker-ce 查看Docker版本 docker --version 启动Docker服务 systemctl start docker 测试 sudo docker run hello-world ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:4:2","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"配置阿里云镜像仓库 使用体验平台提供的阿里云子账号登录 容器镜像服务控制台 [镜像中心] \u003e [镜像加速器]，可以看到一个专属的镜像加速地址 配置Docker镜像加速器（在界面下方可以看到这段代码，复制即可，注意镜像地址替换为自己的专属地址） sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json \u003c\u003c-'EOF' { \"registry-mirrors\": [\"https://******.mirror.aliyuncs.com\"] } EOF sudo systemctl daemon-reload sudo systemctl restart docker ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:4:3","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"使用Docker安装其他服务 查看本地镜像 docker images 在ECS实例详情中，点击本实例安全组，配置安全组规则，在入方向添加需要开放的端口，如22，3306，8080，80，443，3389等。 Nginx 拉取最新版的Nginx镜像 docker pull nginx:latest 运行容器 docker run --name nginx-test -p 8080:80 -d nginx 参数说明： --name nginx-test：容器名称。 -p 8080:80： 端口进行映射，将本地8080端口映射到容器内部的80端口。 -d nginx： 设置容器在后台一直运行。 在浏览器地址栏输入http://\u003cECS公网IP地址\u003e:8080访问Nginx服务。 MySQL 拉取最新版的MySQL镜像 docker pull mysql:latest 运行容器 docker run -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql 参数说明： --name mysql-test：容器名称。 -p 3306:3306 ：端口进行映射，将本地3306端口映射到容器内部的3306端口。 MYSQL_ROOT_PASSWORD=123456：设置 MySQL 服务 root 用户的密码。 进入MySQL docker exec -it mysql-test bash（mysql-test换成自己mysql容器名称） 登录MySQL mysql -u root -p 123456 查看下MySQL中用户的信息 select host,user,plugin,authentication_string from mysql.user; 其中，host为 % 表示不限制ip，localhost表示本机使用，如果plugin不是mysql_native_password 则需要修改密码； 修改MySQL密码 修改mysql root用户不限制ip且修改密码 ALTER user 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456'; 刷新权限 FLUSH PRIVILEGES; 之后便可以用如navicat，datagrip等软件连接MySQL。 Adminer 拉取最新版的Adminer镜像 docker pull adminer:latest 创建容器 docker run --link mysql:mysql --name adminer -p 9999:8080 -d --restart=always adminer 参数说明： -d：设置容器在后台一直运行。 -p 9999:8080：端口进行映射，将本地9999端口映射到容器内部的8080端口。 --restart=always：设置容器开机自启动。 --name adminer：容器名称。 访问数据库 浏览器打开网页http://\u003cECS公网IP地址\u003e:9999。 服务器填写公网IP，用户名和密码填写MySQL预设的用户名和密码。 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:4:4","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"安装Docker Compose #运行以下命令以下载Docker Compose的当前稳定版本： sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose #将可执行权限应用于二进制文件： sudo chmod +x /usr/local/bin/docker-compose 检查安装 docker-compose -v ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:4:5","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"Docker 常用命令 启动docker sudo service docker start 停止docker sudo service docker stop 重启docker sudo service docker restart 列出Docker CLI命令 docker docker container –help 显示Docker版本和信息 docker –version docker version docker info Execute Docker image docker run hello-world（hello-world可替换为任一已创建容器的名字） 列出镜像列表 docker image ls 列出docker容器 (running, all, all in quiet mode) docker container ls docker container ls –all docker container ls -aq ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:5:0","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"python访问云数据库 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:6:0","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"安装pymysql pip3 install pymysql ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:6:1","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"数据库常用操作（参考菜鸟教程） cmd管理员模式打开 mysql -u root -p 111111 --登录 show databases; --展示所有数据库 create database database_name; --创建数据库 use database_name; --选择数据库 show tables; --展示所有数据表 –创建数据表 CREATE TABLE IF NOT EXISTS `table_name`( `id` INT UNSIGNED AUTO_INCREMENT, --自增 `title` VARCHAR(100) NOT NULL, `author` VARCHAR(40) NOT NULL, PRIMARY KEY ( `id` ) --主键 )ENGINE=InnoDB DEFAULT CHARSET=utf8; --ENGINE 设置存储引擎，CHARSET 设置编码 –删除数据表 DROP TABLE table_name ; –插入数据 INSERT INTO table_name ( field1, field2,...fieldN ) VALUES ( value1, value2,...valueN ); –查询数据 SELECT column_name,column_name FROM table_name [WHERE Clause] --WHERE 语句来包含任何条件 [LIMIT N][ OFFSET M] --LIMIT 属性来设定返回的记录数，OFFSET指定SELECT语句开始查询的数据偏移量，为0 返回数据表 table_name 的所有记录 select * from table_name; –修改数据 UPDATE table_name SET field1=new-value1, field2=new-value2 [WHERE Clause] --WHERE 语句来包含任何条件 –删除数据 DELETE FROM table_name [WHERE Clause] --WHERE 语句来包含任何条件 –对匹配数据操作（like子句） SELECT field1, field2,...fieldN FROM table_name WHERE field1 LIKE condition1 [AND [OR]] filed2 = 'somevalue' LIKE 通常与 % 一同使用，它类似于UNIX或正则表达式中的星号 *。比如 WHERE source LIKE \"%school\"，没有使用百分号 %, LIKE 子句与等号 = 的效果是一样的。 可以使用 AND 或者 OR 指定一个或多个条件。 可以在 DELETE 或 UPDATE 命令中使用 WHERE...LIKE 子句来指定条件。 ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:6:2","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["server"],"content":"实例 import pymysql class Mysql: def __init__(self): # 建立数据库连接 self.db = pymysql.connect(host='localhost', # 此处必须是是云端填公网ip，本地填localhost port=3306, # 端口 user='root', # mysql的登录账号admin password='111111', # mysql的登录密码pwd db='test', # mysql中要访问的数据表 charset='utf8') # 表的字符集 # 获取游标对象 self.cursor = self.db.cursor() def end(self): self.cursor.close() self.db.close() def insert(self, sql, ls): self.cursor = self.db.cursor() self.cursor.executemany(sql, ls) # 一次插入多条方式 # self.cursor.execute(sql, ls) #一次插入一条方式 self.db.commit() def delete(self, sql): self.cursor = self.db.cursor() self.cursor.execute(sql) self.db.commit() def query(self, sql): self.cursor = self.db.cursor() self.cursor.execute(sql) for row in self.cursor.fetchall(): # print(\"'id':%s\\t title:%s\\t author:%s\" % row) print(row) print(f\"一共查找到：{self.cursor.rowcount}\") def modify(self, sql, ls): self.cursor = self.db.cursor() self.cursor.execute(sql, ls) self.db.commit() if __name__ == '__main__': mysql = Mysql() sql = \"insert into test values(%s,%s,%s)\" # 添加过主键自增（PRINARY KEY AUTO_INCREMENT）第一列在增加数据的时候， # 可以写为0或者null，这样添加数据可以自增，从而可以添加全部数据， # 而不用特意规定哪几列添加数据。 # ls1和ls2可以是列表或者元组 #插入 # ls = [0, 'hhh', '李三'] ls1 = [0, 'hhh', '小明'] ls2 = (0, 'hey', '王五') ls = [ls1, ls2] mysql.insert(sql, ls) sql = \"select * from test\" # sql = \"select title,author from test;\" #选择部分列 mysql.query(sql) #修改 ls = ['wow', '李四', 1] sql = \"update test set title=%s,author=%swhere id=%s\" mysql.modify(sql, ls) sql = \"select * from test\" mysql.query(sql) #删除 sql = \"delete from test where author='李四'\" mysql.delete(sql) sql = \"select * from test\" mysql.query(sql) mysql.end() ","date":"2020-11-08","objectID":"/posts/Aliyun-Server-setup-Guide.html/:6:3","tags":["阿里云","Docker","Nginx","MySQL","Adminer","python"],"title":"阿里云服务器搭建指南","uri":"/posts/Aliyun-Server-setup-Guide.html/"},{"categories":["openvino"],"content":"本文主要描述了树莓派4B安装openvino的步骤，验证安装的两个测试用例，以及树莓派运行推理模型的开发流程。","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"openvino环境安装步骤 ","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/:1:0","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"下载发行工具包 openvino官方下载发行版工具包，一般建议下载最新版本。 ","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/:1:1","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"解压工具包，配置依赖等 下载好后，放到树莓派的home/pi/Downloads目录下准备安装。（不建议修改位置） 创建安装目录 sudo mkdir -p /opt/intel/openvino 解压安装 sudo tar -xf l_openvino_toolkit_runtime_raspbian_p_\u003cversion\u003e.tgz --strip 1 -C /opt/intel/openvino 安装外部依赖CMake sudo apt install cmake 设置环境变量 临时设置环境变量 source /opt/intel/openvino/bin/setupvars.sh 永久设置环境变量 echo \"source /opt/intel/openvino/bin/setupvars.sh\" \u003e\u003e ~/.bashrc 永久环境变量成功的测试，新开一个终端（terminal），在第一行会看到如下字样： [setupvars.sh] OpenVINO environment initialized 添加USB规则 1、将当前的Linux用户添加到该users组： sudo usermod -a -G users \"$(whoami)\" 若没有永久设置环境变量，请保证在setupvars.sh运行后执行。 2、安装运行install_NCS_udev_rules.sh脚本的USB规则： sh /opt/intel/openvino/install_dependencies/install_NCS_udev_rules.sh 3、插入神经计算棒2。 ","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/:1:2","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"测试用例（人脸检测） 框选输入图像中的人脸 创建build目录 mkdir build \u0026\u0026 cd build 构建对象检测样本 cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-march=armv7-a\" /opt/intel/openvino/deployment_tools/inference_engine/samples/cpp make -j2 object_detection_sample_ssd 下载预训练的人脸检测模型 .bin文件 wget --no-check-certificate https://download.01.org/opencv/2020/openvinotoolkit/2020.1/open_model_zoo/models_bin/1/face-detection-adas-0001/FP16/face-detection-adas-0001.bin .xml文件 wget --no-check-certificate https://download.01.org/opencv/2020/openvinotoolkit/2020.1/open_model_zoo/models_bin/1/face-detection-adas-0001/FP16/face-detection-adas-0001.xml 运行用例 ./armv7l/Release/object_detection_sample_ssd -m face-detection-adas-0001.xml -d MYRIAD -i \u003cpath_to_image\u003e 该应用程序输入图像的路径，输出一个图像（out_0.bmp），其中检测到的面孔用矩形括起来。 通过树莓派摄像头实时检测人脸（参考b站同济子豪兄） 配置摄像头 sudo nano /etc/modules 在该文件末尾添加一行 bcm2835-v412 输入命令 vcgencmd get_camera 得到supported = 1 detected = 1，证明摄像头连接成功。 ls /dev 看到video0即为摄像头。 配置展示窗口 export DISPLAY=:0.0 例程 import cv2 as cv import numpy as np print(\"------------------start detection!------------------\") # 载入bin文件和xml文件 net = cv.dnn.readNet(\"face-detection-adas-0001.xml\", \"face-detection-adas-0001.bin\") net.setPreferableTarget(cv.dnn.DNN_TARGET_MYRIAD) cap = cv.VideoCapture(0) while(1): ret, frame = cap.read() frame = cv.resize(frame, (480, 320), interpolation=cv.INTER_CUBIC) blob = cv.dnn.blobFromImage(frame, size=(672, 384), ddepth=cv.CV_8U) net.setInput(blob) out = net.forward() # 画人脸框 for detection in out.reshape(-1, 7): confidence = float(detection[2]) # 获取左上角坐标 xmin = int(detection[3] * frame.shape[1]) ymin = int(detection[4] * frame.shape[0]) # 获取右下角坐标 xmax = int(detection[5] * frame.shape[1]) ymax = int(detection[6] * frame.shape[0]) if confidence \u003e 0.5: cv.rectangle(frame, (xmin, ymin), (xmax, ymax), color=(0, 255, 0)) # 展示图像 cv.imshow(\"capture\", frame) if cv.waitKey(1) \u0026 0XFF == ord(\"q\"): cv.imwrite(\"out.png\", frame) print(\"------------------save image!------------------\") break # 关闭摄像头和窗口 cap.release() cv.destoryAllWindows() print(\"------------------end detection!------------------\") ","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/:1:3","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"树莓派运行推理模型的开发流程 选择预训练模型； 使用模型优化器，来转换模型； 最后在树莓派上推理模型。 open model zoo预训练模型： https://download.01.org/opencv/2020/openvinotoolkit/2020.4/open_model_zoo/models_bin/ 常规的开发方式，需要在 open model zoo 中寻找适合的模型，对于大多数业务来说，都能满足基本需要。若需要跑一些比较前沿的模型或者是自己设计的神经网络时，那各类模型转换的方法则是必备技能，难度相应也会大一些。 附上pytorch转ONNX格式后应用在openvino的方法： https://zhuanlan.zhihu.com/p/116065374 ","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/:2:0","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"参考链接 openvino官方 ","date":"2020-10-29","objectID":"/posts/raspberry-pi-4b-openvino-guide.html/:3:0","tags":["raspberry","openvino","ncs2","camera"],"title":"树莓派4B安装openvino环境指南（参考官网撰写）","uri":"/posts/raspberry-pi-4b-openvino-guide.html/"},{"categories":["openvino"],"content":"主要讲述了win10安装openvino环境的步骤和两个验证安装的脚本，以及使用神经计算棒2时这两个脚本的测试方法。","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"openvino环境安装步骤 ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:1:0","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"下载发行版工具包 openvino官方下载发行版工具包，一般建议下载最新版本。下载页面选项如下图。 然后选择工具包版本，没有特殊要求下载Full Package就可。 ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:1:1","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"安装exe\u0026补齐依赖项 下载好后，点击exe程序安装。 建议按照默认路径安装，不作修改（省去后期很多麻烦），没有特殊要求全选即可。 提示缺少的依赖项暂且不管，点击下一步完成安装。但需要记住哪些依赖项还没安装，后期要逐一补上。 依赖项如下： Microsoft Visual Studio 2019/2017（安装“使用C++的桌面开发“模块）和对应的buildtools的“C++生成工具”。默认配置即可，这里建议不修改默认安装路径。 CMake3.10或更高版本的64位，其中vs2019要搭配CMake3.14。要添加到系统变量Path。 Python3.6-3.8的64位版本，添加到系统变量Path。 ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:1:2","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"设置环境变量 确认依赖项补齐后，以管理员身份打开cmd，然后执行openvino的“bin”目录下的setupvars.bat以临时设置环境变量。永久环境变量设置请参考其他帖子。cmd不用关，执行下一步骤。 cd C：\\ Program Files（x86）\\ Intel \\ openvino_2021 \\ bin \\ setupvars.bat ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:1:3","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"配置模型优化器 可以一次性配置所有支持框架的模型优化器，也可以单独选择某一个来配置。同样也在第三步的cmd里执行。下载速度慢，可给PIP全局换源。 为所有支持框架配置 转到bat文件目录。 cd C：\\ Program Files（x86）\\ Intel \\ openvino_2021 \\ deployment_tools \\ model_optimizer \\ install_prerequisites 运行配置文件。（为Caffe *，TensorFlow * 1.x，MXNet *，Kaldi *和ONNX *配置Model Optimizer） install_prerequisites.bat 为单独框架配置 转到bat文件目录。 cd C：\\ Program Files（x86）\\ Intel \\ openvino_2021 \\ deployment_tools \\ model_optimizer \\ install_prerequisites 对于Caffe： install_prerequisites_caffe.bat 对于TensorFlow 1.x: install_prerequisites_tf.bat 对于TensorFlow 2.x: install_prerequisites_tf2.bat 对于MXNet： install_prerequisites_mxnet.bat 对于ONNX： install_prerequisites_onnx.bat 对于Kaldi： install_prerequisites_kaldi.bat ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:1:4","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"使用验证脚本验证安装 在CPU上运行验证程序，共两个程序。 转到demo目录。 cd C：\\ Program Files（x86）\\ Intel \\ openvino_2021 \\ deployment_tools \\ demo \\ 运行图像分类验证脚本 demo_squeezenet_download_convert_run.bat 运行结果： 此处有可能遇到“Failed to connect to raw.githubusercontent.com port 443: Connection refused“的问题，需要修改系统hosts文件。 方法请参考下列网址，先找到github域名地址，再到hosts文件里添加。 https://blog.csdn.net/donaldsy/article/details/107482368?utm_medium=distribute.pc_relevant.none-task-blog-title-1\u0026spm=1001.2101.3001.4242 https://jingyan.baidu.com/article/624e7459b194f134e8ba5a8e.html 运行推理管道验证脚本 demo_security_barrier_camera.bat 运行结果： ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:1:5","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"神经计算棒2使用 ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:2:0","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"测试 windows无需配置USB驱动程序，将神经计算棒2插入USB端口，输入如下命令： 运行图像分类验证脚本 cd C:\\\"Program Files (x86)\"\\Intel\\openvino_2021.1.110\\deployment_tools\\demo .\\demo_squeezenet_download_convert_run.bat –d MYRIAD 运行推理管道验证脚本 cd C:\\\"Program Files (x86)\"\\Intel\\openvino_2021.1.110\\deployment_tools\\demo .\\demo_security_barrier_camera.bat -d MYRIAD ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:2:1","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":["openvino"],"content":"参考链接 openvino官方 神经计算棒2指南 ","date":"2020-10-28","objectID":"/posts/win10-openVino-ncs2-guide.html/:3:0","tags":["openvino","ncs2"],"title":"win10安装openvino环境及神经计算棒2使用指南（参考官网撰写）","uri":"/posts/win10-openVino-ncs2-guide.html/"},{"categories":null,"content":" Dillon LoveIt主题作者 以上友链按添加时间先后排序。欢迎互贴链接。 ","date":"0001-01-01","objectID":"/links/:0:0","tags":null,"title":"友链","uri":"/links/"},{"categories":null,"content":"申请条件 网站为个人网站，且能稳定访问。 网站内容积极向上。 ","date":"0001-01-01","objectID":"/links/:0:1","tags":null,"title":"友链","uri":"/links/"},{"categories":null,"content":"申请方式 提供信息示例 网站名称：fan’s blog网站地址：https://fmx789.github.io网站标志：https://cdn.jsdelivr.net/gh/fmx789/fmx789.github.io/android-chrome-512x512.png网站描述：Kevin Fan的个人博客 将网站信息按以上要求格式在本页留言或发送到本人邮箱。 ","date":"0001-01-01","objectID":"/links/:0:2","tags":null,"title":"友链","uri":"/links/"}]